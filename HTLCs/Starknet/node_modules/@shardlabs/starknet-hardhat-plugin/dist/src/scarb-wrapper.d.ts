import { ProcessResult } from "@nomiclabs/hardhat-docker";
import { HardhatRuntimeEnvironment, TaskArguments } from "hardhat/types";
export declare abstract class ScarbWrapper {
    private static instance;
    static getInstance(cliArgs: TaskArguments, hre: HardhatRuntimeEnvironment): ScarbWrapper;
    abstract build(packageConfigPath: string, artifactDirPath: string): ProcessResult;
}
export declare class DockerizedScarbWrapper extends ScarbWrapper {
    private projectRootPath;
    private formattedImage;
    constructor(imageTag: string, projectRootPath: string);
    build(packageConfigPath: string, artifactDirPath: string): ProcessResult;
}
export declare class CustomScarbWrapper extends ScarbWrapper {
    private scarbCommand;
    constructor(scarbCommand: string);
    build(packageConfigPath: string, artifactDirPath: string): ProcessResult;
}
