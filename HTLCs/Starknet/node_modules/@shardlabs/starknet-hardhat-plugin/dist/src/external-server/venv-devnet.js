"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VenvDevnet = void 0;
const child_process_1 = require("child_process");
const venv_1 = require("../utils/venv");
const external_server_1 = require("./external-server");
class VenvDevnet extends external_server_1.ExternalServer {
    constructor(venvPath, host, port, args, stdout, stderr, vmLang) {
        super(host, port, "is_alive", "integrated-devnet", stdout, stderr);
        this.command = "starknet-devnet";
        this.args = args;
        this.vmLang = vmLang;
        if (venvPath !== "active") {
            this.command = (0, venv_1.getPrefixedCommand)((0, venv_1.normalizeVenvPath)(venvPath), this.command);
        }
    }
    async spawnChildProcess() {
        const args = ["--host", this.host, "--port", this.port].concat(this.args || []);
        const options = { env: { PATH: process.env.PATH, STARKNET_DEVNET_CAIRO_VM: this.vmLang } };
        return (0, child_process_1.spawn)(this.command, args, options);
    }
    cleanup() {
        this.childProcess?.kill();
    }
}
exports.VenvDevnet = VenvDevnet;
//# sourceMappingURL=venv-devnet.js.map